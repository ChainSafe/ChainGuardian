name: Release

on:
  push:
    branches:
      - 'master'

jobs:
  tag:
    name: Check and Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create tag
        id: tag
        uses: butlerlogic/action-autotag@1.1.1
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          tag_prefix: "v"
    outputs:
      tag: ${{ steps.tag.outputs.tagname }}
      version: ${{ steps.tag.outputs.version }}

  release:
    name: Publish
    runs-on: ${{ matrix.os }}
    needs: tag
    strategy:
      matrix:
        os: [ubuntu-latest,windows-latest,macos-latest]
    if: needs.tag.outputs.tag != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12.13

      - name: Restore dependencies
        uses: actions/cache@master
        id: cache-deps
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-ignore-optional
      
      - name: Install & build
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --ignore-optional#--network-timeout 1000000 

      # - name: Generate changelog
      #   id: changelog
      #   uses: heinrichreimer/github-changelog-generator-action@v2.2
      #   with:
      #     token: ${{ secrets.GH_PAGES_TOKEN }}
      #     issues: "false"
      #     issuesWoLabels: "false"
      #     pullRequests: "true"
      #     prWoLabels: "true"
      #     author: "true"
      #     usernamesAsGithubLogins: "true"
      #     compareLink: "true"
      #     filterByMilestone: "false"
      #     unreleased: "false"
      #     sinceTag: "${{ needs.tag.outputs.previous_tag }}"
      #     maxIssues: "0"
      #     stripGeneratorNotice: "true"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.tag }}
          body_path: "${{ needs.tag.outputs.tag }}"
          release_name: Release ${{ needs.tag.outputs.tag }}
          prerelease: true # we can promote to release trough github
      
      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ steps.create_release.outputs.id }}
      
      #in case of failure
      - name: Rollback on failure
        if: failure()
        uses: author/action-rollback@9ec72a6af74774e00343c6de3e946b0901c23013
        with:
          id: ${{ steps.create_release.outputs.id }}
          tag: ${{ needs.tag.outputs.tag }}
          delete_orphan_tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}# workflow name